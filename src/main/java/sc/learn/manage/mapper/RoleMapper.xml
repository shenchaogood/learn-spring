<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="sc.learn.manage.mapper.RoleMapper" >
	
	<sql id="query_role">
		select 
			<!-- user.*, -->
			t_role.f_id roleId,
			t_role.f_name roleName,
			t_role.f_description roleDescription,
			t_role.f_create_time roleCreateTime,
			t_role.f_update_time roleUpdateTime,
			t_privilege.f_id privilegeId,
			t_privilege.f_name privilegeName,
			t_privilege.f_description privilegeDescription,
			t_privilege.f_url url,
			t_privilege.f_icon icon,
			t_privilege.f_leaf leaf,
			t_privilege.f_create_time privilegeCreateTime,
			t_privilege.f_update_time privilegeUpdateTime,
		from 
			t_role
		left join(t_privilege,t_role_privilege)
		on(
			t_role.f_id=t_role_privilege.f_role_id and
			t_role_privilege.f_privilege_id=t_privilege.f_id)
	</sql>

	<resultMap type="role" id="RoleResultMap">
		<id column="roleId" property="id"/>
		<result column="roleName" property="name"/>
		<result column="roleDescription" property="description"/>
		<result column="roleCreateTime" property="createTime"/>
		<result column="roleUpdateTime" property="updateTime"/>
		
		<collection property="privileges" ofType="privilege">
		 	<id column="privilegeId" property="id"/>
		 	<result column="privilegeName" property="name"/>
		 	<result column="privilegeDescription" property="description"/>
		 	<result column="privilegeCreateTime" property="createTime"/>
			<result column="privilegeUpdateTime" property="updateTime"/>
		</collection>
	</resultMap>


	<insert id="insert" parameterType="role">
		<selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
			select last_insert_id() as id
		</selectKey>
		insert into t_role(f_name,f_description) values(#{name},#{description})
	</insert>
	
	<insert id="insertRolePrivileges" parameterType="role">
		insert into t_role_privilege (f_role_id,f_privilege_id) values 
		<foreach collection="privileges" item="privilege" open="" close="" separator=",">
			(#{id},#{privilege.id})
		</foreach>
	</insert>
	
	<delete id="deleteById" parameterType="int">
		delete from role where id = #{value}
	</delete>
	
	<delete id="deleteRoleUsers" parameterType="int">
		delete from user_role where f_role_id = #{id}
	</delete>
	
	<delete id="deleteRolePrivileges" parameterType="int">
		delete from t_role_privilege where f_role_id = #{id}
	</delete>
	
	<update id="update" parameterType="role">
		update 
			t_role
		<set>
			<if test="name!=null">
				f_name=#{name},
			</if>
			<if test="name!=null">
				f_description=#{description},
			</if>
			t_update_time=now()
		</set>
		<where>
			f_id=#{id}
		</where> 
	</update>
	
	<select id="selectById" parameterType="int" resultMap="RoleResultMap">
		<include refid="query_role"></include>
		<where>
			t_role.f_id=#{value}
		</where>
	</select>
	
	<select id="selectAll" resultType="role">
		select * from t_role
	</select>
	
	<select id="selectByName" parameterType="string" resultType="role">
		select * from t_role where f_name=#{value}
	</select>
	
</mapper>