<?xml version="1.0" encoding="UTF-8"?>  
<!DOCTYPE generatorConfiguration  
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"  
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd"> 
<!-- mvn mybatis-generator:generate -->
<generatorConfiguration>
	<!-- 可以用于加载配置项或者配置文件，在整个配置文件中就可以使用${propertyKey}的方式来引用配置项 resource：配置资源加载地址，使用resource，MBG从classpath开始找，比如com/myproject/generatorConfig.properties 
		url：配置资源加载地质，使用URL的方式，比如file:///C:/myfolder/generatorConfig.properties. 注意，两个属性只能选址一个; 另外，如果使用了mybatis-generator-maven-plugin，那么在pom.xml中定义的properties都可以直接在generatorConfig.xml中使用 
		<properties resource="" url="" /> -->

	<!-- 在MBG工作的时候，需要额外加载的依赖包 location属性指明加载jar/zip包的全路径 <classPathEntry location="/Program Files/IBM/SQLLIB/java/db2java.zip" /> -->


	<!-- 
	    context:生成一组对象的环境 
	    id:必选，上下文id，用于在生成错误时提示
	    defaultModelType:指定生成对象的样式
	    	特别说明 我的前面三个都不管用,不知道为啥
	        1，conditional：类似hierarchical；
	        2，flat：所有内容（主键，blob）等全部生成在一个对象中；
	        3，hierarchical：主键生成一个XXKey对象(key class)，Blob等单独生成一个对象，其他简单属性在一个对象中(record class)
	    targetRuntime:
	        1，MyBatis3：默认的值，生成基于MyBatis3.x以上版本的内容，包括XXXBySample；
	        2，MyBatis3Simple：类似MyBatis3，只是不生成XXXBySample；
	    introspectedColumnImpl：类全限定名，用于扩展MBG
	-->
	<context id="testTables" defaultModelType="conditional" targetRuntime="MyBatis3">
		<!-- 自动识别数据库关键字，默认false，如果设置为true，根据SqlReservedWords中定义的关键字列表；
	        一般保留默认值，遇到数据库关键字（Java关键字），使用columnOverride覆盖
	     -->
	    <property name="autoDelimitKeywords" value="false"/>
	    <!-- 生成的Java文件的编码 -->
	    <property name="javaFileEncoding" value="UTF-8"/>
	    <!-- 格式化java代码 -->
	    <property name="javaFormatter" value="org.mybatis.generator.api.dom.DefaultJavaFormatter"/>
	    <!-- 格式化XML代码 -->
	    <property name="xmlFormatter" value="org.mybatis.generator.api.dom.DefaultXmlFormatter"/>
	
	    <!-- beginningDelimiter和endingDelimiter：指明数据库的用于标记数据库对象名的符号，比如ORACLE就是双引号，MYSQL默认是`反引号； -->
	    <property name="beginningDelimiter" value="`"/>
	    <property name="endingDelimiter" value="`"/>
	
		<!-- <plugin type="org.mybatis.generator.plugins.RenameExampleClassPlugin" /> -->
		<plugin type="org.mybatis.generator.plugins.SerializablePlugin" />
		<plugin type="org.mybatis.generator.plugins.ToStringPlugin" />
		<plugin type="org.mybatis.generator.plugins.EqualsHashCodePlugin" />
		<commentGenerator>
			<!-- 是否去除自动生成的注释 true：是 ： false:否 -->
			<property name="suppressAllComments" value="true" />
		</commentGenerator>
		<!--mysql数据库连接的信息：驱动类、连接地址、用户名、密码 -->
		<jdbcConnection driverClass="com.mysql.cj.jdbc.Driver" connectionURL="jdbc:mysql:///test?characterEncoding=utf8&amp;serverTimezone=UTC" userId="root"
			password="sc123+-*/">
		</jdbcConnection>

		<!--oracle配置 -->
		<!-- <jdbcConnection driverClass="oracle.jdbc.OracleDriver" connectionURL="jdbc:oracle:thin:@127.0.0.1:1521:yycg" userId="yycg" password="yycg"> 
			</jdbcConnection> -->

		<!-- 默认false，把JDBC DECIMAL 和 NUMERIC 类型解析为 Integer， 为 true时把JDBC DECIMAL和NUMERIC类型解析为java.math.BigDecimal -->
		<javaTypeResolver>
			<property name="forceBigDecimals" value="false" />
		</javaTypeResolver>

		<!-- targetProject:生成model类的位置，重要！！ -->
		<javaModelGenerator targetPackage="sc.learn.manage.po" targetProject="./src/main/java">
			<!-- enableSubPackages:是否让schema作为包的后缀 -->
			<property name="enableSubPackages" value="false" />
			<!-- 从数据库返回的值被清理前后的空格 -->
			<property name="trimStrings" value="true" />
		</javaModelGenerator>

		<!-- targetProject:mapper映射xml文件生成的位置，重要！！ -->
		<sqlMapGenerator targetPackage="sc.learn.manage.mapper" targetProject="./src/main/java">
			<property name="enableSubPackages" value="false" />
		</sqlMapGenerator>

		<!-- targetPackage：mapper接口生成的位置，重要！！ -->
		<javaClientGenerator type="XMLMAPPER" targetPackage="sc.learn.manage.mapper" targetProject="./src/main/java">
			<property name="enableSubPackages" value="false" />
		</javaClientGenerator>

		<!-- 指定数据库表，要生成哪些表，就写哪些表，要和数据库中对应，不能写错！ -->
		<!-- <table tableName="t_user" mapperName="UserMapper" domainObjectName="User">
			<generatedKey column="f_id" sqlStatement="MySql" identity="true" />
			<columnRenamingRule searchString="^f_" replaceString="" />
		</table>
		<table tableName="t_role" mapperName="RoleMapper" domainObjectName="Role">
			<generatedKey column="f_id" sqlStatement="MySql" identity="true" />
			<columnRenamingRule searchString="^f_" replaceString="" />
		</table>
		<table tableName="t_privilege" mapperName="PrivilegeMapper" domainObjectName="Privilege">
			<generatedKey column="f_id" sqlStatement="MySql" identity="true" />
			<columnRenamingRule searchString="^f_" replaceString="" />
		</table>
		<table tableName="t_role_privilege" mapperName="RolePrivilegeMapper" domainObjectName="RolePrivilege">
			<columnRenamingRule searchString="^f_" replaceString="" />
		</table>
		<table tableName="t_user_role" mapperName="UserRoleMapper" domainObjectName="UserRole">
			<columnRenamingRule searchString="^f_" replaceString="" />
		</table> -->

	</context>
</generatorConfiguration>